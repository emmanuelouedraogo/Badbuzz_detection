name: Python CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    # Les variables d'environnement sont nécessaires pour que l'application puisse télécharger les modèles.
    # Vous devez les configurer dans les secrets de votre dépôt GitHub.
    env:
      MODEL_URL: ${{ secrets.MODEL_URL }}
      TOKENIZER_URL: ${{ secrets.TOKENIZER_URL }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip" # Met en cache les dépendances pour accélérer les futurs builds

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests and check coverage
        run: |
          # Lance les tests, génère un rapport dans le terminal et fait échouer le build
          # si la couverture de test est inférieure à 90%.
          pytest --cov=app --cov-report=term-missing --cov-fail-under=90

      - name: Upload HTML coverage report
        # Cette étape s'exécute toujours, même si la précédente échoue,
        # pour que vous puissiez consulter le rapport.
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage-report
          path: htmlcov/
