name: CI/CD Pipeline for Badbuzz Detection

# This workflow runs on pushes and pull requests to the 'main' branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    # Environment variables needed by app.py to download models for testing
    # These must be set in your repository's secrets
    env:
      MODEL_URL: ${{ secrets.MODEL_URL }}
      TOKENIZER_URL: ${{ secrets.TOKENIZER_URL }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: "pip" # Cache dependencies to speed up future builds

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint and Format Check with Ruff
      run: |
        pip install ruff
        echo "--- Checking for style and quality issues with 'ruff check' ---"
        ruff check .
        echo "--- Checking for formatting issues with 'ruff format' ---"
        ruff format --check .

    - name: Run tests and check coverage
      run: |
        # Run tests, generate a report in the terminal, and fail the build
        # if test coverage is below 90%.
        pytest --cov=app --cov-report=term-missing --cov-fail-under=90

    - name: Upload HTML coverage report
      # This step always runs, even if the previous one fails,
      # so you can review the report.
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: html-coverage-report
        path: htmlcov/

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    # This job runs only if the 'test' job succeeds
    needs: test
    # This job runs only on pushes to the main branch, not on pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name="Login to Docker Hub"
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./api.Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/badbuzz-api:latest,${{ secrets.DOCKERHUB_USERNAME }}/badbuzz-api:${{ github.sha }}

    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./frontend.Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/badbuzz-frontend:latest,${{ secrets.DOCKERHUB_USERNAME }}/badbuzz-frontend:${{ github.sha }}